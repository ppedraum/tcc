{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styles from \"../styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Feed() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      posts = _useState4[0],\n      setPosts = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchInput = _useState6[0],\n      setSearchInput = _useState6[1];\n\n  useEffect(function () {\n    fetch('http://localhost:3001/posts').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setPosts(result);\n      setLoading(false);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.titulo,\n      children: \"Meu Feed\"\n    }), _jsxs(View, {\n      style: styles.searchContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Procurar Posts\",\n        onChangeText: function onChangeText(text) {\n          return setSearchInput(text);\n        }\n      }), _jsx(Button, {\n        title: \"Procurar\"\n      })]\n    }), isLoading ? _jsx(ActivityIndicator, {\n      size: \"large\"\n    }) : _jsx(FlatList, {\n      data: posts,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return _jsxs(View, {\n          style: styles.post_cell,\n          children: [_jsx(Text, {\n            style: styles.titulo,\n            children: item.titulo\n          }), _jsx(Text, {\n            style: styles.conteudo,\n            children: item.conteudo\n          })]\n        });\n      }\n    })]\n  });\n}\n\nexport default Feed;","map":{"version":3,"names":["StatusBar","useEffect","useState","styles","Feed","isLoading","setLoading","posts","setPosts","searchInput","setSearchInput","fetch","then","res","json","result","catch","err","console","log","container","titulo","searchContainer","input","text","item","id","index","post_cell","conteudo"],"sources":["C:/expo react/node_mais_reactnative/src/Feed.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator, Button, TextInput, FlatList } from 'react-native';\nimport styles from '../styles'\n\n\nfunction Feed() {\n\n\n    const [isLoading, setLoading] = useState(true);\n    const [posts, setPosts] = useState([]);\n    const [searchInput, setSearchInput] = useState('');\n\n\n    useEffect(()=>{\n        fetch('http://localhost:3001/posts')\n        .then(res => res.json())\n        .then(result => {\n            setPosts(result);\n            setLoading(false);\n        })\n        .catch(err => console.log(err));\n    }, []);\n    \n/*     function getPostsByName(nome){\n        setLoading(true);\n        const post = posts.filter((post)=> nome = post.nome);\n        setPosts(post);\n        setLoading(false);\n    } */\n\n    return(\n        <View style={styles.container}>\n            <Text style={styles.titulo}>Meu Feed</Text>\n            <View style={styles.searchContainer} >\n                <TextInput style={styles.input} placeholder='Procurar Posts' onChangeText={(text)=>setSearchInput(text)} />\n                {/* onPress={()=>getPostsByName(searchInput)}  */}\n                <Button title='Procurar'/>\n            </View>\n            \n            {\n                isLoading ?\n                <ActivityIndicator size='large'/>\n                :\n                /* console.log(posts) */\n                /*\n                Temos que 'desestruturar' a resposta do renderItem em partes diferentes\n\n                uma parte é o item em si (item) (nosso post)\n                a outra é o index do item (id dele na flatlist)\n                */\n                <FlatList\n                data={posts}\n                keyExtractor={(item)=>item.id}\n                renderItem={({ item, index })=> (\n                    <View style={styles.post_cell}>\n                    <Text style={styles.titulo} >{item.titulo}</Text>\n                    <Text style={styles.conteudo} >{item.conteudo}</Text>\n                    </View>\n                )}\n                />\n                \n            }\n        </View>\n        \n    )\n\n\n}\n\nexport default Feed;"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;;;;;AAEA,OAAOC,MAAP;;;;AAGA,SAASC,IAAT,GAAgB;EAGZ,gBAAgCF,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOG,SAAP;EAAA,IAAkBC,UAAlB;;EACA,iBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAsCN,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAOO,WAAP;EAAA,IAAoBC,cAApB;;EAGAT,SAAS,CAAC,YAAI;IACVU,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAJ,EAAJ;IAAA,CADT,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;MACZP,QAAQ,CAACO,MAAD,CAAR;MACAT,UAAU,CAAC,KAAD,CAAV;IACH,CALD,EAMCU,KAND,CAMO,UAAAC,GAAG;MAAA,OAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;IAAA,CANV;EAOH,CARQ,EAQN,EARM,CAAT;EAiBA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEd,MAAM,CAACiB,SAApB;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAEjB,MAAM,CAACkB,MAApB;MAAA;IAAA,EADJ,EAEI,MAAC,IAAD;MAAM,KAAK,EAAElB,MAAM,CAACmB,eAApB;MAAA,WACI,KAAC,SAAD;QAAW,KAAK,EAAEnB,MAAM,CAACoB,KAAzB;QAAgC,WAAW,EAAC,gBAA5C;QAA6D,YAAY,EAAE,sBAACC,IAAD;UAAA,OAAQd,cAAc,CAACc,IAAD,CAAtB;QAAA;MAA3E,EADJ,EAGI,KAAC,MAAD;QAAQ,KAAK,EAAC;MAAd,EAHJ;IAAA,EAFJ,EASQnB,SAAS,GACT,KAAC,iBAAD;MAAmB,IAAI,EAAC;IAAxB,EADS,GAUT,KAAC,QAAD;MACA,IAAI,EAAEE,KADN;MAEA,YAAY,EAAE,sBAACkB,IAAD;QAAA,OAAQA,IAAI,CAACC,EAAb;MAAA,CAFd;MAGA,UAAU,EAAE;QAAA,IAAGD,IAAH,QAAGA,IAAH;QAAA,IAASE,KAAT,QAASA,KAAT;QAAA,OACR,MAAC,IAAD;UAAM,KAAK,EAAExB,MAAM,CAACyB,SAApB;UAAA,WACA,KAAC,IAAD;YAAM,KAAK,EAAEzB,MAAM,CAACkB,MAApB;YAAA,UAA8BI,IAAI,CAACJ;UAAnC,EADA,EAEA,KAAC,IAAD;YAAM,KAAK,EAAElB,MAAM,CAAC0B,QAApB;YAAA,UAAgCJ,IAAI,CAACI;UAArC,EAFA;QAAA,EADQ;MAAA;IAHZ,EAnBR;EAAA,EADJ;AAqCH;;AAED,eAAezB,IAAf"},"metadata":{},"sourceType":"module"}