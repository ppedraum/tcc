{"ast":null,"code":"import { createContext } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext({\n  signed: false,\n  user: {},\n  login: function login() {}\n});\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  function login(email, senha) {\n    fetch('http://localhost:3001/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        e_mail: email,\n        senha: senha\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (result.error != null) {\n        console.log('O usuário não foi encontrado!');\n      } else {\n        console.log(result.usuario.nome);\n      }\n    });\n  }\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      signed: false,\n      user: {},\n      login: login\n    },\n    children: children\n  });\n}\nexport default AuthContext;","map":{"version":3,"names":["createContext","AuthContext","signed","user","login","AuthProvider","children","email","senha","fetch","method","headers","body","JSON","stringify","e_mail","then","res","json","result","error","console","log","usuario","nome"],"sources":["C:/expo react/mundo/src/contexts/auth.js"],"sourcesContent":["//Nosso contexto para a autenticação\r\n/*\r\nO context basicamente serve para gravar informações necessárias para vários componentes,\r\ncomo tokens de autenticação.\r\n\r\nPodemos então envolver a parte que queremos que tenha essas informações com o Context.Provider,\r\nonde todos os componentes herdam-nas.\r\n*/\r\n\r\nimport { createContext } from 'react';\r\n\r\n//criando o contexto e dizendo qual o formato dele (atributos que vão ser passados para ele)\r\n//O que é passado na função não é o valor default, mas sim o formato dos atributos dela.\r\n//Bom para que o react entenda quais são os attrs\r\nconst AuthContext = createContext({signed:false, user:{}, login:()=>{}});\r\n\r\n/*\r\nProvider -> Provê as informações daquele contexto\r\nExportamos o Provider com o parâmetro children, que recebe pelo react todos os componentes\r\nque vão estar dentro desse componente, e assim repassamos normalmente os valores para lá\r\n*/\r\n\r\n\r\n\r\n\r\nexport function AuthProvider({children}){\r\n\r\n    function login(email, senha){\r\n        fetch('http://localhost:3001/auth/login', {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                e_mail: email,\r\n                senha: senha\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(result=>{\r\n            if(result.error != null){\r\n                console.log('O usuário não foi encontrado!');\r\n            }else{\r\n                console.log(result.usuario.nome);\r\n                /* navigation.navigate('Home') */\r\n            }\r\n        });\r\n    \r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{signed:false, user:{}, login}} >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContext;"],"mappings":"AASA,SAASA,aAAT,QAA8B,OAA9B;;AAKA,IAAMC,WAAW,GAAGD,aAAa,CAAC;EAACE,MAAM,EAAC,KAAR;EAAeC,IAAI,EAAC,EAApB;EAAwBC,KAAK,EAAC,iBAAI,CAAE;AAApC,CAAD,CAAjC;AAWA,OAAO,SAASC,YAAT,OAAiC;EAAA,IAAVC,QAAU,QAAVA,QAAU;;EAEpC,SAASF,KAAT,CAAeG,KAAf,EAAsBC,KAAtB,EAA4B;IACxBC,KAAK,CAAC,kCAAD,EAAqC;MACtCC,MAAM,EAAE,MAD8B;MAEtCC,OAAO,EAAE;QACL,gBAAe;MADV,CAF6B;MAKtCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBC,MAAM,EAAER,KADS;QAEjBC,KAAK,EAAEA;MAFU,CAAf;IALgC,CAArC,CAAL,CAUCQ,IAVD,CAUM,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAJ,EAAJ;IAAA,CAVT,EAWCF,IAXD,CAWM,UAAAG,MAAM,EAAE;MACV,IAAGA,MAAM,CAACC,KAAP,IAAgB,IAAnB,EAAwB;QACpBC,OAAO,CAACC,GAAR,CAAY,+BAAZ;MACH,CAFD,MAEK;QACDD,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAP,CAAeC,IAA3B;MAEH;IACJ,CAlBD;EAoBH;;EAED,OACI,KAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAACtB,MAAM,EAAC,KAAR;MAAeC,IAAI,EAAC,EAApB;MAAwBC,KAAK,EAALA;IAAxB,CAA7B;IAAA,UACKE;EADL,EADJ;AAKH;AAED,eAAeL,WAAf"},"metadata":{},"sourceType":"module"}