{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { React, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n      nome = _useState.nome,\n      setNome = _useState.setNome;\n\n  function sendForm() {\n    var response, json;\n    return _regeneratorRuntime.async(function sendForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.0.111:3001/cad', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json; charset=UTF-8'\n              },\n              body: JSON.stringify({\n                nome: nome\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context.sent;\n\n            if (json == 'error') {\n              setMsg('Usuário ou senha invalidos!');\n              setTimeout(function () {\n                setMsg('');\n              }, 3001);\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Nome:\"\n    }), _jsx(TextInput, {\n      onChange: function onChange(nome) {\n        setNome(nome);\n      }\n    }), _jsx(Button, {\n      title: \"enviar\",\n      onPress: function onPress() {\n        return sendForm();\n      }\n    }), _jsx(Text, {\n      children: nome\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","StatusBar","App","nome","setNome","sendForm","fetch","method","headers","Accept","body","JSON","stringify","response","json","setMsg","setTimeout","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/expo react/Banco/App.js"],"sourcesContent":["import {React, useState} from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, TextInput, Button } from 'react-native';\n\nexport default function App() {\n\n    const {nome, setNome} = useState('');\n\n    async function sendForm()\n    {\n        let response= await fetch('http://192.168.0.111:3001/cad', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json; charset=UTF-8',\n            },\n            body: JSON.stringify({\n              nome: nome,\n            })\n        \n        });\n        let json = await response.json();\n        //console.log(json);\n        if(json =='error'){\n            setMsg('Usuário ou senha invalidos!');\n            setTimeout(()=>{\n                setMsg('');\n            }, 3001);\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n        <Text>Nome:</Text>\n        <TextInput onChange={(nome)=>{setNome(nome)}} />\n        <Button title='enviar' onPress={()=>sendForm()} />\n        <Text>{nome}</Text>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;EAE1B,gBAAwBF,QAAQ,CAAC,EAAD,CAAhC;EAAA,IAAOG,IAAP,aAAOA,IAAP;EAAA,IAAaC,OAAb,aAAaA,OAAb;;EAEA,SAAeC,QAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAEwBC,KAAK,CAAC,+BAAD,EAAkC;cACvDC,MAAM,EAAE,MAD+C;cAEvDC,OAAO,EAAE;gBACPC,MAAM,EAAE,kBADD;gBAEP,gBAAgB;cAFT,CAF8C;cAMvDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;gBACnBT,IAAI,EAAEA;cADa,CAAf;YANiD,CAAlC,CAF7B;;UAAA;YAEQU,QAFR;YAAA;YAAA,iCAaqBA,QAAQ,CAACC,IAAT,EAbrB;;UAAA;YAaQA,IAbR;;YAeI,IAAGA,IAAI,IAAG,OAAV,EAAkB;cACdC,MAAM,CAAC,6BAAD,CAAN;cACAC,UAAU,CAAC,YAAI;gBACXD,MAAM,CAAC,EAAD,CAAN;cACH,CAFS,EAEP,IAFO,CAAV;YAGH;;UApBL;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAuBA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEE,MAAM,CAACC,SAApB;IAAA,WACA,KAAC,IAAD;MAAA;IAAA,EADA,EAEA,KAAC,SAAD;MAAW,QAAQ,EAAE,kBAACf,IAAD,EAAQ;QAACC,OAAO,CAACD,IAAD,CAAP;MAAc;IAA5C,EAFA,EAGA,KAAC,MAAD;MAAQ,KAAK,EAAC,QAAd;MAAuB,OAAO,EAAE;QAAA,OAAIE,QAAQ,EAAZ;MAAA;IAAhC,EAHA,EAIA,KAAC,IAAD;MAAA,UAAOF;IAAP,EAJA;EAAA,EADJ;AAQH;AAED,IAAMc,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}