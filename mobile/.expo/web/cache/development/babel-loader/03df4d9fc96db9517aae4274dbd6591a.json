{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AuthContext from \"../../contexts/auth\";\nimport styles from \"../styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errMsg = _useState4[0],\n      setErrMsg = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      usuarios = _useState6[0],\n      setUsuarios = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      senha = _useState10[0],\n      setSenha = _useState10[1];\n\n  var _useContext = useContext(AuthContext),\n      signed = _useContext.signed;\n\n  function login() {\n    fetch('http://localhost:3001/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        e_mail: email,\n        senha: senha\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (result.error != null) {\n        setErrMsg('O usuário não foi encontrado!');\n      } else {\n        setErrMsg(result.usuario.nome);\n        console.log(signed);\n      }\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.titulo,\n      children: \"Ol\\xE1!\"\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"E-Mail\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"exemplo@mail.com\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        }\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Senha\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: senha,\n        onChangeText: function onChangeText(senha) {\n          return setSenha(senha);\n        }\n      })]\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        children: errMsg\n      })\n    }), _jsx(View, {\n      children: _jsx(Button, {\n        title: \"Login\",\n        onPress: function onPress() {\n          return login();\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Cadastro');\n      },\n      children: _jsx(Text, {\n        children: \"N\\xE3o tem conta? Cadastre-se\"\n      })\n    })]\n  });\n}\n\nexport default Login;","map":{"version":3,"names":["StatusBar","useEffect","useState","useContext","AuthContext","styles","Login","navigation","isLoading","setLoading","errMsg","setErrMsg","usuarios","setUsuarios","email","setEmail","senha","setSenha","signed","login","fetch","method","headers","body","JSON","stringify","e_mail","then","res","json","result","error","usuario","nome","console","log","container","titulo","input","navigate"],"sources":["C:/expo react/mundo/src/pages/SignIn/Login.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport { StyleSheet, Text, View, ActivityIndicator, Button, TextInput, TouchableOpacity } from 'react-native';\r\n\r\nimport AuthContext from '../../contexts/auth'\r\n\r\nimport styles from '../styles'\r\n\r\nfunction Login({navigation}){\r\n\r\n    \r\n    const [isLoading, setLoading] = useState(true);\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n\r\n    const { signed } = useContext(AuthContext);\r\n\r\n    function login(){\r\n        fetch('http://localhost:3001/auth/login', {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                e_mail: email,\r\n                senha: senha\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(result=>{\r\n            if(result.error != null){\r\n                setErrMsg('O usuário não foi encontrado!');\r\n            }else{\r\n                setErrMsg(result.usuario.nome);\r\n                console.log(signed)\r\n                /* navigation.navigate('Home') */\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n        <View style={styles.container}>\r\n            \r\n            <Text style={styles.titulo}>Olá!</Text>\r\n            <View>\r\n                <Text>E-Mail</Text>\r\n                <TextInput style={styles.input} placeholder='exemplo@mail.com' onChangeText={(email)=>setEmail(email)} />\r\n            </View>\r\n            <View>\r\n                <Text>Senha</Text>\r\n                <TextInput style={styles.input} value={senha} onChangeText={(senha)=>setSenha(senha)} />\r\n            </View>\r\n            <View>\r\n                <Text>{errMsg}</Text>\r\n            </View>\r\n            <View>\r\n                <Button title='Login' onPress={()=>login()} />\r\n            </View>\r\n            <TouchableOpacity onPress={()=>navigation.navigate('Cadastro')} ><Text>Não tem conta? Cadastre-se</Text></TouchableOpacity>\r\n            \r\n        </View>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}