{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction FetchPosts() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      posts = _useState4[0],\n      setPosts = _useState4[1];\n\n  useEffect(function () {\n    fetch('http://localhost:3001/posts').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setPosts(result);\n      setLoading(false);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  });\n\n  function display() {\n    return posts.map(function (post) {\n      return _jsxs(View, {\n        style: styles.post_cell,\n        children: [_jsx(Text, {\n          style: styles.titulo,\n          children: post.titulo\n        }), _jsx(Text, {\n          style: styles.conteudo,\n          children: post.conteudo\n        })]\n      });\n    });\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: display()\n  });\n}\n\nexport default FetchPosts;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  post_cell: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    width: '50%',\n    margin: '10px'\n  },\n  titulo: {\n    fontWeight: 'bold',\n    fontSize: '30px'\n  },\n  conteudo: {\n    fontSize: '20px'\n  }\n});","map":{"version":3,"names":["StatusBar","useEffect","useState","FetchPosts","isLoading","setLoading","posts","setPosts","fetch","then","res","json","result","catch","err","console","log","display","map","post","styles","post_cell","titulo","conteudo","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","margin","fontWeight","fontSize"],"sources":["C:/expo react/node_mais_reactnative/testes/FetchPosts.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator, FlatList } from 'react-native';\n\nfunction FetchPosts() {\n\n    /*\n    useStates para o loading do app e os dados do arquivo json.\n    o loading serve apenas para indicar ao usuário que algo está carregando, nesse caso,\n    a requisição do app para pegar o conteúdo do servidor localhost:3001 na rota /cad\n    */\n    const [isLoading, setLoading] = useState(true);\n    const [posts, setPosts] = useState([]);\n\n    useEffect(()=> {\n        fetch('http://localhost:3001/posts')\n        .then(res => res.json())\n        .then(result => {\n            setPosts(result);\n            setLoading(false);\n        })\n        .catch(err => console.log(err))\n    });\n\n    /* function getContent(){\n        if(isLoading) return <ActivityIndicator size=\"large\"/>\n        else {\n            return <Text>{}</Text>\n        }\n    } */\n\n    function display(){\n        return posts.map((post)=>{\n            return (\n                <View style={styles.post_cell} >\n                    <Text style={styles.titulo}>{post.titulo}</Text>\n                    <Text style={styles.conteudo}>{post.conteudo}</Text>\n                </View>\n                \n            );\n        })\n    }\n\n    return(\n        <View style={styles.container}>\n            {display()}\n        </View>\n    )\n\n\n}\n\nexport default FetchPosts;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  post_cell:{\n    display: 'flex',\n    alignItems: 'flex-start',\n    width: '50%',\n    margin: '10px',\n\n  },\n  titulo:{\n    fontWeight : 'bold',\n    fontSize : '30px'\n  },\n  conteudo:{\n    fontSize : '20px'\n  },\n});"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;;;;;;AAGA,SAASC,UAAT,GAAsB;EAOlB,gBAAgCD,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOE,SAAP;EAAA,IAAkBC,UAAlB;;EACA,iBAA0BH,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EAEAN,SAAS,CAAC,YAAK;IACXO,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAJ,EAAJ;IAAA,CADT,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;MACZL,QAAQ,CAACK,MAAD,CAAR;MACAP,UAAU,CAAC,KAAD,CAAV;IACH,CALD,EAMCQ,KAND,CAMO,UAAAC,GAAG;MAAA,OAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;IAAA,CANV;EAOH,CARQ,CAAT;;EAiBA,SAASG,OAAT,GAAkB;IACd,OAAOX,KAAK,CAACY,GAAN,CAAU,UAACC,IAAD,EAAQ;MACrB,OACI,MAAC,IAAD;QAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;QAAA,WACI,KAAC,IAAD;UAAM,KAAK,EAAED,MAAM,CAACE,MAApB;UAAA,UAA6BH,IAAI,CAACG;QAAlC,EADJ,EAEI,KAAC,IAAD;UAAM,KAAK,EAAEF,MAAM,CAACG,QAApB;UAAA,UAA+BJ,IAAI,CAACI;QAApC,EAFJ;MAAA,EADJ;IAOH,CARM,CAAP;EASH;;EAED,OACI,KAAC,IAAD;IAAM,KAAK,EAAEH,MAAM,CAACI,SAApB;IAAA,UACKP,OAAO;EADZ,EADJ;AAOH;;AAED,eAAed,UAAf;AAEA,IAAMiB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP,CADoB;EAO/BT,SAAS,EAAC;IACRJ,OAAO,EAAE,MADD;IAERY,UAAU,EAAE,YAFJ;IAGRE,KAAK,EAAE,KAHC;IAIRC,MAAM,EAAE;EAJA,CAPqB;EAc/BV,MAAM,EAAC;IACLW,UAAU,EAAG,MADR;IAELC,QAAQ,EAAG;EAFN,CAdwB;EAkB/BX,QAAQ,EAAC;IACPW,QAAQ,EAAG;EADJ;AAlBsB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}