{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    fetch('http://localhost:3001/cad').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setData(result);\n      setLoading(false);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  });\n\n  function getContent() {\n    if (isLoading) return _jsx(ActivityIndicator, {\n      size: \"large\"\n    });else {\n      console.log(data.title);\n    }\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: getContent()\n  });\n}\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","useEffect","useState","App","isLoading","setLoading","data","setData","fetch","then","res","json","result","catch","err","console","log","getContent","title","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/expo react/node_mais_reactnative/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react-native';\n\nfunction App() {\n\n    const [isLoading, setLoading] = useState(true);\n    const [data, setData] = useState([]);\n\n    useEffect(()=> {\n        fetch('http://localhost:3001/cad')\n        .then(res => res.json())\n        .then(result => {\n            setData(result);\n            setLoading(false);\n        })\n        .catch(err => console.log(err))\n    });\n\n    function getContent(){\n        if(isLoading) return <ActivityIndicator size=\"large\"/>\n        else {\n            console.log(data.title)\n        }\n    }\n\n    return(\n        <View style={styles.container}>\n            {getContent()}\n        </View>\n    )\n\n\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;;;;AAGA,SAASC,GAAT,GAAe;EAEX,gBAAgCD,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOE,SAAP;EAAA,IAAkBC,UAAlB;;EACA,iBAAwBH,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOI,IAAP;EAAA,IAAaC,OAAb;;EAEAN,SAAS,CAAC,YAAK;IACXO,KAAK,CAAC,2BAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAJ,EAAJ;IAAA,CADT,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;MACZL,OAAO,CAACK,MAAD,CAAP;MACAP,UAAU,CAAC,KAAD,CAAV;IACH,CALD,EAMCQ,KAND,CAMO,UAAAC,GAAG;MAAA,OAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;IAAA,CANV;EAOH,CARQ,CAAT;;EAUA,SAASG,UAAT,GAAqB;IACjB,IAAGb,SAAH,EAAc,OAAO,KAAC,iBAAD;MAAmB,IAAI,EAAC;IAAxB,EAAP,CAAd,KACK;MACDW,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACY,KAAjB;IACH;EACJ;;EAED,OACI,KAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,UACKH,UAAU;EADf,EADJ;AAOH;;AAED,eAAed,GAAf;AAEA,IAAMgB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}